
(()=>{const c=document.getElementById('three-bg');if(!c||typeof THREE==='undefined')return;const r=new THREE.WebGLRenderer({canvas:c,antialias:true,alpha:true});const s=new THREE.Scene();const cam=new THREE.PerspectiveCamera(60,2,.1,100);cam.position.set(0,.6,3.2);const resize=()=>{const w=c.clientWidth=innerWidth,h=c.clientHeight=innerHeight;r.setSize(w,h,false);cam.aspect=w/h;cam.updateProjectionMatrix()};addEventListener('resize',resize,{passive:true});resize();const geo=new THREE.TorusKnotGeometry(.7,.26,180,24);const mat=new THREE.MeshStandardMaterial({color:0x6AA7FF,roughness:.35,metalness:.65,emissive:0x0a0e2a});const knot=new THREE.Mesh(geo,mat);knot.rotation.x=.9;s.add(knot);const pgeo=new THREE.BufferGeometry(),COUNT=800,pos=new Float32Array(COUNT*3);for(let i=0;i<COUNT;i++){pos[i*3]=(Math.random()-.5)*12;pos[i*3+1]=(Math.random()-.5)*6;pos[i*3+2]=(Math.random()-.5)*10}pgeo.setAttribute('position',new THREE.BufferAttribute(pos,3));const pmat=new THREE.PointsMaterial({size:.02,color:0x77ddff});s.add(new THREE.Points(pgeo,pmat));const amb=new THREE.AmbientLight(0xffffff,.55);s.add(amb);const dir=new THREE.DirectionalLight(0xffffff,1.2);dir.position.set(2,2,2);s.add(dir);let t=0;(function loop(){t+=.006;knot.rotation.y+=.006;dir.position.x=Math.sin(t)*3;dir.position.y=1.4+Math.cos(t*.6);r.render(s,cam);requestAnimationFrame(loop)})()})();
